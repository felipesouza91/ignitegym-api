events {
    
}

http {
    # The http block includes settings for handling HTTP traffic.

    include       mime.types;
    # Specifies the file that defines MIME types for various file extensions.

    default_type  application/octet-stream;
    # Sets the default MIME type for files when the type is not determined.

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    # Defines a custom log format called 'main' for access logs.

    access_log  /var/log/nginx/access.log  main;
    # Specifies the file and format for access logs.

    error_log   /var/log/nginx/error.log warn;
    # Specifies the file and log level for error logs.

    sendfile        on;
    # Enables the use of sendfile for efficient file transfer.

    keepalive_timeout  65;
    # Sets the timeout for persistent connections with the client.

    # upstream auth {
    #     server auth:9090;
    # }
    # # Defines an upstream group for the user service.

    # upstream exercises {
    #     server exercises:9090;
    # }
    # # Defines an upstream group for the product service.

    # upstream groups {
    #     server groups:9090;
    # }

    # upstream histories {
    #     server histories:9090;
    # }

    # upstream users {
    #     server users:9090;
    # }

    # Defines an upstream group for the order service.

    server {
        listen 80;
        # The server block defines settings for a virtual server.
        # This server listens on port 80.

        server_name localhost;
        # The server_name directive specifies the domain name for this server.

        location /auth {
            proxy_pass http://auth:9090;
            # For requests to /users, forward the request to the user_service upstream.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Set various headers to forward to the upstream server.
        }

        location /exercises {
            proxy_pass http://exercises:9090;
            # For requests to /products, forward the request to the product_service upstream.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Set various headers to forward to the upstream server.
        }

        location /groups {
            proxy_pass http://groups:9090;
            # For requests to /orders, forward the request to the order_service upstream.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Set various headers to forward to the upstream server.
        }

        location /histories {
            proxy_pass http://histories:9090;
            # For requests to /orders, forward the request to the order_service upstream.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Set various headers to forward to the upstream server.
        }

        location /users {
            proxy_pass http://users:9090;
            # For requests to /orders, forward the request to the order_service upstream.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Set various headers to forward to the upstream server.
        }

        location / {
            return 404;
            # Return a 404 Not Found status for any requests not matching the above locations.
        }
    }
}